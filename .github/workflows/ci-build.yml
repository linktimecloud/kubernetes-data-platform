# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI-Build

on:
  push:
    branches:
      - main
      - release-*
  pull_request:
    branches:
      - main
      - release-*

jobs:
  build-docker-images:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get the version
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

      - name: Docker Login
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          username: ${{ secrets.REG_USER }}
          password: ${{ secrets.REG_PASSWD }}

      - name: Get Short SHA
        id: slug
        run: echo "git_revision=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build Images
        id: build
        run: |
          if [[ "${{ github.ref_name }}" =~ ^[.\|v][0-9]{1,}.[0-9]{1,}[.\|-][0-9]{1,} ]];then
            export VERSION=${{ github.ref_name }}
          else:
            export VERSION=${{ steps.slug.outputs.git_revision }}
          fi
          echo {VERSION}
          echo "version={VERSION}" >> $GITHUB_OUTPUT
          #make docker-build IMG_REGISTRY=${{ secrets.CONTAINER_REGISTRY }} VERSION={VERSION}

      - name: Push Images
        run: |
          GIT_VERSION=${{ steps.build.outputs.version }}
          echo {GIT_VERSION}
          #make docker-push IMG_REGISTRY=${{ secrets.CONTAINER_REGISTRY }}

on:
  push:
    branches:
      - main
      - release-*
  workflow_dispatch: {}
  pull_request:
    branches:
      - main
      - release-*

permissions:
  contents: read

env:
  # Common versions
  GO_VERSION: '1.21'
  GOLANG_CI_VERSION: 'v1.50'

jobs:

  detect-noop:
    runs-on: ubuntu-22.04
    outputs:
      noop: ${{ steps.noop.outputs.should_skip }}
    permissions:
      actions: write
    steps:
      - name: Detect No-op Changes
        id: noop
        uses: fkirc/skip-duplicate-actions@f75f66ce1886f00957d99748a42c724f4330bdcf
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          paths_ignore: '["**.md", "**.mdx", "**.png", "**.jpg"]'
          do_not_skip: '["workflow_dispatch", "schedule", "push"]'
        continue-on-error: true

  staticcheck:
    runs-on: ubuntu-22.04
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'

    steps:
      - name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          submodules: true

      - name: Static Check
        run: make static-check

  lint:
    runs-on: ubuntu-22.04
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'
    permissions:
      contents: read       # for actions/checkout to fetch code
      pull-requests: read  # for golangci/golangci-lint-action to fetch pull requests

    steps:
      - name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          submodules: true

      # This action uses its own setup-go, which always seems to use the latest
      # stable version of Go. We could run 'make lint' to ensure our desired Go
      # version, but we prefer this action because it leaves 'annotations' (i.e.
      # it comments on PRs to point out linter violations).
      - name: Lint
        uses: golangci/golangci-lint-action@3a919529898de77ec3da873e3063ca4b10e7f5cc # v3.7.0
        with:
          version: ${{ env.GOLANGCI_VERSION }}

  check-cli-build:
    runs-on: ubuntu-22.04
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          submodules: true

      - name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go Dependencies
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84
        with:
          path: .work/pkg
          key: ${{ runner.os }}-pkg-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-pkg-

      - name: Run cli-build
        run: make kdp-cli-build

      - name: Cleanup binary
        run: make kdp-cli-cleanup

  check-image-build:
    runs-on: ubuntu-22.04
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          submodules: true

      - name: Build Test
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64